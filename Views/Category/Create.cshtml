@model jotun.Models.CategoryViewModels
@{
    ViewBag.Title = "Create";
}




@using (Html.BeginForm("Create", "Category", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{

    <div style="background-color:#e9ecef; padding:15px;">
        <h4>Add New Category</h4>
        <hr />
        <div class="center-block" style="background-color:transparent">
            @Html.AntiForgeryToken()

            <div class="form-group" hidden>
                @Html.Label("Id", new { @class = "col-md-3 control-label" })
                <div class="col-md-9" readonly="readonly">
                    @Html.TextBoxFor(m => m.Id, new { @class = "form-control getAutoCustomerId ", @readonly = "readonly" })

                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-4" style="background-color:transparent">
                        <div class="form-group ">
                            @Html.Label("Type", new { @class = "col-md-12 control-label" })
                            <div class="col-md-12">
                                <select class="form-control" id="Type" name="Type">
                                    <option value="0">Product</option>
                                    <option value="1">Service</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4" style="background-color:transparent;">
                        <div class="form-group">

                            <span style=" float:left">
                                @Html.Label("Category Name(Eng)", new { @class = "col-md-12 control-label" })
                            </span>
                            <span style="color:red; float:left; font-size:20px">*</span>

                            <div class="col-md-12">
                                @Html.TextBoxFor(m => m.CategoryNameEng, new { @class = "form-control categoryeng", id = "Username",  @autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.CategoryNameEng, "", new { @class = "text-danger", id = "Status" })

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group" style="background-color:transparent; margin-top:-15px">
                <!--onchange = "UserCheck1()"-->
                <div class="row">
                    <div class="col-md-4" style="background-color:transparent;">
                        <div class="form-group">
                            @Html.Label("Category Name(Kh)", new { @class = "col-md-12 control-label disabled" })
                            <div class="col-md-12">
                                @Html.TextBoxFor(m => m.CategoryNameKh, new { @class = "form-control categorykh", id = "Username1", @autocomplete = "off" })

                            </div>
                        </div>
                    </div>
                    <div class="col-md-4" style="background-color:transparent">
                        <div class="form-group">
                            @Html.Label("Description", new { @class = "col-md-12 control-label" })
                            <div class="col-md-12">
                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @autocomplete = "off" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-9">
                    <input type="submit" class="btn btn-primary kkkk" value="Save" />
                    <input type="reset" value="Cancel" class="btn btn-danger" onclick="window.location='/Category';" />
                </div>
            </div>
        </div>
    </div>

    <link href="~/Scripts/datatables.min.css" rel="stylesheet" />
    @section Scripts {

        @*<script src="~/Scripts/jquery-3.4.1.min.js"></script>
            <link href="~/Content/vendor/jquery/jquery-ui.css" rel="stylesheet" />
            <script src="~/Scripts/jquery-1.12.4.js"></script>
            <script src="~/Scripts/jquery-ui.js"></script>*@
        @*<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">*@
        @*<link rel="stylesheet" href="/resources/demos/style.css">*@
        @*<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
            <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@
        <script src="~/Scripts/datatables.min.js"></script>
        <script>

            $(function () {
                $(".categoryeng").change(function () {
                    if ($('.categoryeng').val() != "") {
                        //$(".unitnamekh").prop("disabled", true);
                        $(".categorykh").val("");
                    } else {
                        $(".categorykh").prop("disabled", false);
                        $(".categorykh").val("");
                    }
                });
                $(".categorykh").change(function () {
                    if ($('.categorykh').val() != "") {
                        //$(".unitnameeng").prop("disabled", true);
                        $(".categoryeng").val("");
                    } else {
                        $(".categoryeng").prop("disabled", false);
                        $(".categoryeng").val("");
                    }
                });
            });
            $(document).ready(function () {
                //  var rnd = new Random();
                //  var randomNumbers = Enumerable.Range(1, 49).OrderBy(x => rnd.Next()).Take(6).ToList();
                //$('.getCurrentDateUpdate').val("Cus-No-" + 1);
                var possible2 = "123456789";
                var possible1 = "abcdefghijklmnopqrstuvwxyz";
                var possible = "zyxwvutsrqpnmlkjihgfedcba";


                $('.getAutoCustomerId').val('' + possible.charAt(Math.floor(Math.random() * possible.length))
                    + possible2.charAt(Math.floor(Math.random() * possible2.length))
                    + (Math.floor(Math.random() * 10) + 1)
                    + possible1.charAt(Math.floor(Math.random() * possible1.length)) + '-'
                    + possible.charAt(Math.floor(Math.random() * possible.length))
                    + possible2.charAt(Math.floor(Math.random() * possible2.length))
                    + (Math.floor(Math.random() * 10) + 1)
                    + possible1.charAt(Math.floor(Math.random() * possible1.length)) + '-'
                    + (Math.floor(Math.random() * 1000) + 1)
                    + possible1.charAt(Math.floor(Math.random() * possible1.length)) + '-'
                    + (Math.floor(Math.random() * 10000) + 1)
                    + possible1.charAt(Math.floor(Math.random() * possible1.length)) + '-'
                    + (Math.floor(Math.random() * 10000) + 1));
            });
            //$.fn.dataTable.ext.errMode = 'throw';
        </script>
        <script>
                function UserCheck() {
                    $.post("@Url.Action("CheckUsernameAvailability", "Category")",
                    {
                        userdata: $("#Username").val()
                    },
                function (data) {
                    if (data == 0) {
                        $("#Username").css("border-color", "Green");
                        $('.kkkk').removeAttr('disabled');
                        $("#Status").html('');
                    }
                    else {
                        $("#Status").html('<font color="Red">That name is taken.Try Another.</font>');
                        $("#Username").css("border-color", "Red");
                        $('.kkkk').attr('disabled', 'disabled');
                    }
                });
            }

        </script>
        @Scripts.Render("~/bundles/jqueryval")
    }

}




































