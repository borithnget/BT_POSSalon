@model jotun.Models.AppointmentModel

@{
    ViewBag.Title = "Create";
}
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<style>
    /* style sici */
    .ui-datepicker {
        z-index: 1600 !important;
    }
</style>
<div class="card" style="margin:70px 50px !important;">
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Appointment</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <input type="hidden" id="AppointmentId" name="AppointmentId" />
                <input type="hidden" id="CustomerId" name="CustomerId" />

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <input type="hidden" id="CustomerId" name="CustomerId" />
                                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.CustomerContact, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.CustomerContact, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CustomerContact, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.EmployeeId, "Assigned Employee", new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <select id="EmployeeId" name="EmployeeId" class="form-control select2 rounded" style="width: 100%; border-radius: 8px;">
                                    <option value=""></option>
                                    @foreach (var item in ViewBag.Employees as List<SelectListItem>)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.Label("Available Shift Time ", new { @class = "control-label col-md-4" })
                            <div class="col-md-4">
                                <input type="text" id="StartTime" name="StartTime" class="form-control" placeholder="Start Time" readonly>
                            </div>
                            <div class="col-md-4">
                                <input type="text" id="EndTime" name="EndTime" class="form-control" placeholder="End Time" readonly>
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.StatTime, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.StatTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StatTime, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.EndTimeExpected, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.EndTimeExpected, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EndTimeExpected, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                <input type="submit" value="Create" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row form-group">
                            <div class="col-md-4">
                                <select class="form-control" id="filter_service">
                                    <option value="0">Select Service</option>
                                    @foreach (var service in jotun.Models.ServiceModel.GetServiceList())
                                    {
                                        <option value="@service.ServiceId" data-price="@service.Price">@service.Name</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-3">
                                <button type="button" class="btn btn-primary" id="btn_add_to_list"><i class="fa fa-plus-circle"></i> Add to List</button>
                            </div>

                        </div>
                        <div class="table-responsive">
                            <table class="table table-bordered" id="table_service">
                                <thead>
                                    <tr>
                                        <th>Service</th>
                                        <th>Price</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.PriceFull, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.PriceFull, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                @Html.ValidationMessageFor(model => model.PriceFull, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.DiscountAmount, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <input type="number" class="form-control" id="DiscountAmount" name="DiscountAmount" min="0" step="any" value="0" />

                                @Html.ValidationMessageFor(model => model.DiscountAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.PriceFinal, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.PriceFinal, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                @Html.ValidationMessageFor(model => model.PriceFinal, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>



            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

@section scripts{
    <link rel="stylesheet" href="~/Content/css/site.css">
    <script src="~/Scripts/jquery-ui.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


    <script type="text/javascript">
        $(function () {
            $('#AppointmentDate').datepicker({
                dateFormat: 'dd-MM-yy'
            }).datepicker("setDate", new Date());

            $('#StatTime').timepicker({
                timeFormat: 'HH:mm',
                interval: 60,
                minTime: '7',
                maxTime: '10:00pm',
                defaultTime: '11',
                startTime: '08:00',
                dynamic: false,
                dropdown: true,
                scrollbar: true
            });

            $('#filter_service').select2();

            $('#btn_add_to_list').click(function (e) {
                var service_id = $('#filter_service').val();
                var service_name = $('option:selected', '#filter_service').text();
                var price = $('option:selected', '#filter_service').attr('data-price');
                $('#table_service tbody').append("<tr>" +
                    "<td><input type='hidden' class='service_id' name='service_id[]' value='" + service_id + "'  />" + service_name + "</td>" +
                    "<td><input type='number' class='form-control service_price' name='service_price[]' value='" + price + "' onchange='calculateTotal()'/></td>" +
                    "<td><a href='javascript:void(0)' class='btn btn-sm btn-danger' onclick='removeRow(this)'><i class='fa fa-trash'></i> </a></td>" +
                    "</tr>");
                calculateTotal();
            });

              $('#CustomerName').autocomplete({
                source: '@Url.Action("getCust", "Sale")',
                select: function (event, ui) {
                    var selectedObj = ui.item;

                    var id = selectedObj.id;
                    var pn = selectedObj.label;
                    var status = selectedObj.status;
                    console.log(selectedObj);
                    $('#CustomerId').val(id);
                }
            });
        });

        function removeRow(row) {
            var ind = row.parentNode.parentNode.rowIndex;
            document.getElementById("table_service").deleteRow(ind);
            calculateTotal();
        }

        function calculateTotal() {
            var priceFull = 0;
            var discountAmount = $('#DiscountAmount').val();
            var service_prices = $('.service_price');
            for (var i = 0; i < service_prices.length; i++) {

                var service_price = parseFloat(service_prices[i].value);
                priceFull = priceFull + parseFloat(service_price);
                console.log(service_price);
            }
            var priceFinal = priceFull - discountAmount;
            $('#PriceFull').val(parseFloat(priceFull).toFixed(2));
            $('#PriceFinal').val(parseFloat(priceFinal).toFixed(2));
        }
        $(document).ready(function () {
            $('#EmployeeId').select2({
                placeholder: "-- Select Employee --",
                allowClear: true
            });
        });
        $(document).ready(function () {
        $("#EmployeeId").change(function () {
            var employeeId = $(this).val();
            if (employeeId) {
                $.ajax({
                    url: '@Url.Action("GetShiftTime", "Appointment")',
                    type: 'GET',
                    data: { employeeId: employeeId },
                    success: function (data) {
                        if (data) {
                            $("#StartTime").val(data.StartTime);
                            $("#EndTime").val(data.EndTime);
                        } else {
                            $("#StartTime").val("N/A");
                            $("#EndTime").val("N/A");
                        }
                    },
                    error: function () {
                        alert("Failed to fetch shift schedule.");
                    }
                });
            } else {
                $("#StartTime").val("");
                $("#EndTime").val("");
            }
        });
    });
    </script>
}
