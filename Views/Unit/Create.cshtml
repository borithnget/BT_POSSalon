@model jotun.Models.UnitViewModels
@{
    ViewBag.Title = "Create";
}




@using (Html.BeginForm("Create", "Unit", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{

    <div style="background-color:#e9ecef; padding:15px;">
        <h4>Add New Unit</h4>
        <hr />
        <div class="center-block" style="background-color:transparent">
            @Html.AntiForgeryToken()


            <div class="form-group" hidden>
                @Html.Label("Id", new { @class = "col-md-3 control-label" })
                <div class="col-md-9" readonly="readonly">
                    @*@Html.TextBoxFor(m => m.Id, new { disabled = "disabled", @class = "form-control getAutoCustomerId " })*@
                    @Html.TextBoxFor(m => m.Id, new { @class = "form-control getAutoCustomerId ", @readonly = "readonly" })

                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-4" style="background-color:transparent">
                        <div class="form-group ">
                            @Html.Label("Date", new { @class = "col-md-12 control-label" })
                            <div class="col-md-12">
                                @Html.LabelFor(m => m.CreatedDate, DateTime.Now.ToString("dd-MMM-yyyy"), new { @class = " form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4" style="background-color:transparent;">
                        <div class="form-group">
                            <span style=" float:left">
                                @Html.Label("Unit Name (Eng)", new { @class = "col-md-12 control-label" })
                            </span>
                            <span style="color:red; float:left; font-size:20px">*</span>

                            <div class="col-md-12">
                                @Html.TextBoxFor(m => m.UnitNameEng, new { @class = "form-control unitnameeng", id = "Username", @onkeyup = "UserCheck()", @autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.UnitNameEng, "", new { @class = "text-danger" })

                                <span id="Status"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group" style="background-color:transparent; margin-top:-15px">
                <div class="row">
                    <div class="col-md-4" style="background-color:transparent;">
                        <div class="form-group">
                            @Html.Label("Unit Type Name(Kh)", new { @class = "col-md-12 control-label disabled" })

                            <div class="col-md-12">
                                @Html.TextBoxFor(m => m.UnitNameKh, new { @class = "form-control unitnamekh", @autocomplete = "off" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4" style="background-color:transparent;">
                        <div class="form-group">
                            <span style=" float:left">
                                @Html.Label("Quantity", new { @class = "col-md-12 control-label" })
                            </span>
                            <span style="color:red; float:left; font-size:20px">*</span>

                            <div class="col-md-12">
                                @*   @Html.TextBoxFor(m => m.Quantity, new { @class = "form-control" ,@type = "number", @min = "0.0", @max ="99999999"})*@
                                @Html.TextBoxFor(m => m.Quantity, new { @class = "form-control", type = "number", step = "any", pattern = "[0-9]+([.][0-9]+)?", min = "1", max = "9999999", @autocomplete = "off" })
                                @*@Html.TextBoxFor(m => m.Quantity, new { @class = "form-control", type = "text", id="quantity",size=20 ,name="quantity", maxlength=7, @onkeypress="return isNumberKey(event)" ,@autocomplete = "off" })*@
                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group" style="background-color:transparent; margin-top:-15px">
                <div class="row">
                    <div class="col-md-8" style="background-color:transparent">
                        <div class="form-group">
                            @Html.Label("Description", new { @class = "col-md-12 control-label" })
                            <div class="col-md-12">
                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @autocomplete = "off" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-9">
                    <input type="submit" class="btn btn-primary kkkk" id="btnsave" value="Save" />
                    <input type="reset" value="Cancel" class="btn btn-danger" onclick="window.location='/Unit';" />
                </div>
            </div>
        </div>
    </div>
    <link href="~/Scripts/datatables.min.css" rel="stylesheet" />
    @section Scripts {
        <script src="~/Scripts/jquery-3.4.1.min.js"></script>
        <link href="~/Content/vendor/jquery/jquery-ui.css" rel="stylesheet" />
        <script src="~/Scripts/jquery-1.12.4.js"></script>
        <script src="~/Scripts/jquery-ui.js"></script>
        <script src="~/Scripts/datatables.min.js"></script>
        <script>

            $(function () {
                //   $(".hiddenclass").hide();
                //$("#SelectedDate").datepicker({ dateFormat: 'dd/mm/yy' });

                //$(".unitnameeng").change(function () {
                //    if ($('.unitnameeng').val() != "") {
                //        //$(".unitnamekh").prop("disabled", true);
                //        $(".unitnamekh").val("");
                //    } else {
                //        $(".unitnamekh").prop("disabled", false);
                //        $(".unitnamekh").val("");
                //    }
                //});
                //$(".unitnamekh").change(function () {
                //    if ($('.unitnamekh').val() != "") {
                //        //$(".unitnameeng").prop("disabled", true);
                //        $(".unitnameeng").val("");
                //    } else {
                //        $(".unitnameeng").prop("disabled", false);
                //        $(".unitnameeng").val("");
                //    }
                //});





            });



            $(document).ready(function () {
                //  var rnd = new Random();
                //  var randomNumbers = Enumerable.Range(1, 49).OrderBy(x => rnd.Next()).Take(6).ToList();
                //$('.getCurrentDateUpdate').val("Cus-No-" + 1);
                var possible2 = "123456789";
                var possible1 = "abcdefghijklmnopqrstuvwxyz";
                var possible = "zyxwvutsrqpnmlkjihgfedcba";


                $('.getAutoCustomerId').val('' + possible.charAt(Math.floor(Math.random() * possible.length))
                    + possible2.charAt(Math.floor(Math.random() * possible2.length))
                    + (Math.floor(Math.random() * 10) + 1)
                    + possible1.charAt(Math.floor(Math.random() * possible1.length)) + '-'
                    + possible.charAt(Math.floor(Math.random() * possible.length))
                    + possible2.charAt(Math.floor(Math.random() * possible2.length))
                    + (Math.floor(Math.random() * 10) + 1)
                    + possible1.charAt(Math.floor(Math.random() * possible1.length)) + '-'
                    + (Math.floor(Math.random() * 1000) + 1)
                    + possible1.charAt(Math.floor(Math.random() * possible1.length)) + '-'
                    + (Math.floor(Math.random() * 10000) + 1)
                    + possible1.charAt(Math.floor(Math.random() * possible1.length)) + '-'
                    + (Math.floor(Math.random() * 10000) + 1));



            });
            //$.fn.dataTable.ext.errMode = 'throw';
        </script>
        <script>
    function UserCheck() {
        $.post("@Url.Action("CheckUsernameAvailability", "Unit")",
            {
                userdata: $("#Username").val()
            },
        function (data) {
            if (data == 0) {
                $("#Username").css("border-color", "Green");
                $('.kkkk').removeAttr('disabled');
                $("#Status").html('');
            }
            else {
                $("#Status").html('<font color="Red">That name is taken.Try Another.</font>');
                $("#Username").css("border-color", "Red");
                $('.kkkk').attr('disabled', 'disabled');
            }
        });
            }
            $(document).ready(function () {
                $('#Username').mouseover(function () {

                });
            });
            //function isNumberKey(evt) {
            //     var charCode = (evt.which) ? evt.which : event.keyCode
            //     if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46)
            //         return false;
            //     else {
            //         var len = document.getElementById("quantity").value.length;
            //         var index = document.getElementById("quantity").value.indexOf('.');

            //         if (index > 0 && charCode == 46) {
            //             return false;
            //         }
            //         if (index > 0) {
            //             var CharAfterdot = (len + 1) - index;
            //             if (CharAfterdot > 3) {
            //                 return false;
            //             }
            //         }

            //     }
            //     return true;
            //  }
        </script>

        @Scripts.Render("~/bundles/jqueryval")
    }

}




































