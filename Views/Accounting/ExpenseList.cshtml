@model List<jotun.Models.AccountingViewModel>

@{
    ViewBag.Title = "Expense List";
}

<div class="d-flex justify-content-between align-items-center mt-3">
    <h2 class="ml-3">Expense List</h2>
    <div class="ml-auto">
        <a href="@Url.Action("CreateExpense", "Accounting")" class="btn btn-primary mr-3 ms-1">
            <i class="fa-solid fa-plus ml-2"></i> CREATE NEW EXPENSE
        </a>
        <a href="@Url.Action("TopupList", "Accounting")" class="btn btn-primary mr-3 ms-1">
            <i class="fa-solid fa-plus ml-2"></i> TOP UP LIST
        </a>
    </div>
</div>
<div class="mt-3" style="margin-left: 55px;">
    <div class="row">

        <div class="col-md-3">
            <label for="startDate">Start Date</label>
            <input type="date" id="startDate" class="form-control">
        </div>
        <div class="col-md-3">
            <label for="endDate">End Date</label>
            <input type="date" id="endDate" class="form-control">
        </div>

        <div class="col-md-3">
            <label for="accountFilter">Account</label>
            <select id="accountFilter" class="form-control">
                <option value="">All Accounts</option>
                @foreach (var account in Model)
                {
                    <option value="@account.AccountCode">@account.AccountCode - @account.AccountName</option>
                }
            </select>
        </div>

        <div class="col-md-3 d-flex align-items-end">
            <button id="exportExcel" class="btn btn-success w-50 ml-2">
                <i class="fa fa-file-excel"></i> EXPORT TO EXCEL
            </button>
        </div>
    </div>
</div>

<div class="container" style="max-width: 95%; margin: 0 auto; margin-top: 30px;">
    <table id="ExpenseTable" class="table table-bordered table-striped" style="width: 100%;">
        <thead>
            <tr>
                <th>Date</th>
                <th>Account</th>
                <th>Description</th>
                <th>Supplier Name</th>
                <th>Supplier Contact</th>
                <th>Cost</th>
                <th>Attachment</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var account in Model)
            {
                if (account.Expenses != null && account.Expenses.Any())
                {
                    foreach (var expense in account.Expenses)
                    {
                        <tr>
                            <td class="expense-date">@expense.Date.ToShortDateString()</td>
                            <td class="expense-account">@expense.AccountCode-@expense.Account</td>
                            <td>@expense.Description</td>
                            <td>@expense.SupplierName</td>
                            <td>@expense.SupplierContact</td>
                            <td>@String.Format("{0:N2}", expense.Cost)</td>
                            <td></td>
                            <td>
                                <a href="javascript:void(0);" class="btn btn-primary btn-sm edit-expense" data-id="@expense.Id">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a href="javascript:void(0);" class="btn btn-danger btn-sm delete-expense" data-id="@expense.Id">
                                    <i class="fa fa-trash"></i>
                                </a>
                            </td>
                        </tr>
                    }
                }
            }
        </tbody>
        <tfoot>
            <tr id="totalRow">
                <td colspan="5" style="text-align: right; font-weight: bold;">Total Cost:</td>
                <td id="totalCost" style="font-weight: bold;"></td>
                <td colspan="2"></td>
            </tr>
        </tfoot>
    </table>
</div>
<!-- Modal -->
<div class="modal fade" id="editExpenseModal" tabindex="-1" role="dialog" aria-labelledby="editExpenseModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editExpenseModalLabel">Edit Expense</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body"></div>
        </div>
    </div>
</div>
<div class="modal fade" id="deleteExpenseModal" tabindex="-1" role="dialog" aria-labelledby="deleteExpenseModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteExpenseModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this expense?
            </div>
            <div class="modal-footer d-flex justify-content-end">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>


<link rel="stylesheet" href="~/Content/css/site.css">
<link href="~/Content/vendor/datatables/datatables.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.2/xlsx.full.min.js"></script>



@section Scripts {
    <script src="~/Scripts/datatables.min.js"></script>
    <script>
        $(document).ready(function () {
            var table = $('#ExpenseTable').DataTable({
                "paging": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "lengthMenu": [5, 10, 25, 50, 100],
                "language": {
                    "search": "Search Expense:"
                }
            });
            table.on('draw', function () {
                calculateTotalCost();
            });
            $('#startDate, #endDate, #accountFilter').on('change', filterTable);

            function filterTable() {
                var startDate = $('#startDate').val();
                var endDate = $('#endDate').val();
                var accountFilter = $('#accountFilter').val();
                if (startDate && !endDate) {
                    return;
                }
                var start = startDate ? new Date(startDate) : null;
                var end = endDate ? new Date(endDate) : null;

                table.rows().every(function () {
                    var row = $(this.node());
                    var dateText = row.find('.expense-date').text();
                    var accountText = row.find('.expense-account').text();

                    var rowDate = dateText ? new Date(dateText) : null;
                    var matchesDate = (!start || (rowDate && rowDate >= start)) && (!end || (rowDate && rowDate <= end));
                    var matchesAccount = !accountFilter || accountText.includes(accountFilter);

                    if (matchesDate && matchesAccount) {
                        row.show();
                    } else {
                        row.hide();
                    }
                });
                calculateTotalCost();
            }

            function calculateTotalCost() {
                let totalCost = 0;
                $('#ExpenseTable tbody tr:visible').each(function () {
                    let costCell = $(this).find('td:nth-child(6)');
                    let cost = parseFloat(costCell.text()) || 0;
                    totalCost += cost;
                });
                $('#totalCost').text('$' + totalCost.toFixed(2));
            }
            calculateTotalCost();
        });
        $(document).ready(function () {
        $('#ExpenseTable').on('click', '.btn-primary', function () {
            var expenseId = $(this).data('id');
            $.ajax({
            url: '@Url.Action("EditExpense", "Accounting")/' + expenseId,
            type: 'GET',
            success: function (response) {
                console.log('Response:', response);
            $('#editExpenseModal .modal-body').html(response);
            $('#editExpenseModal').modal('show');
            },
            error: function (xhr, status, error) {
            console.error('Error:', error);
            alert('Error loading the edit form.');
        }
    });
    });
    });
        $(document).ready(function () {
            let expenseIdToDelete = null;
            $(".delete-expense").on("click", function () {
                expenseIdToDelete = $(this).data("id");
                $("#deleteExpenseModal").modal("show");
            });
            $("#confirmDelete").on("click", function () {
                if (expenseIdToDelete) {
                    $.ajax({
                        url: "/Accounting/Delete",
                        type: "POST",
                        data: { id: expenseIdToDelete },
                        success: function (response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert("Error deleting expense.");
                            }
                        },
                        error: function () {
                            alert("Failed to delete the expense.");
                        }
                    });
                }
            });
        });
        $(document).ready(function () {
            $("#exportExcel").click(function () {
                let table = document.getElementById("ExpenseTable");
                let wb = XLSX.utils.book_new();
                let ws = XLSX.utils.table_to_sheet(table);
                XLSX.utils.book_append_sheet(wb, ws, "Expense Report");
                XLSX.writeFile(wb, "Expense_Report.xlsx");
            });
        });
    </script>
}
