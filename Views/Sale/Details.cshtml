@model jotun.Models.SaleViewModels
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Model.RevicedFromCustomer =Convert.ToDecimal(Convert.ToDecimal(Model.RevicedFromCustomer) + Model.ReceivedByABA).ToString("N2");
}

@using (Html.BeginForm("Details", "Sale", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div style="background-color:#ffffff; padding:15px;">
        <h4>Detail Sale </h4>
        <hr />
        <div class="center-block" style="background-color:transparent">
            @Html.AntiForgeryToken()
            @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
            @Html.HiddenFor(model => model.Id)
            <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static">
                <div class="modal-dialog modal-sm" role="document">
                    <div class="modal-content">

                        <div class="modal-body">
                            Are you sure you want to delete?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                            <input type="reset" value="Delete" i class="btn btn-danger" onclick="window.location='/Sale/Delete/@Html.ValueFor(model => model.Id)';" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-8" style="background-color:transparent">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6" style="background-color:transparent">
                                    <div class="form-group ">
                                        @Html.Label("Date", new { @class = "col-md-12 control-label" })
                                        <div class="col-md-12">
                                            @Html.TextBoxFor(m => m.CreatedDate, new { @class = " form-control", @readonly = "readonly" })
                                        </div>

                                    </div>
                                </div>

                                <div class="col-md-6" style="background-color:transparent;">
                                    <div class="form-group">
                                        <span style=" float:left">
                                            @Html.Label("Customer", new { @class = "col-md-12 control-label disabled" })
                                        </span>

                                        <div class="col-md-12">
                                            @Html.TextBoxFor(m => m.CustomerName, new { @class = " form-control", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                           @* <div class="row">
                                <div class="col-md-6" style="background-color:transparent">

                                </div>

                                <div class="col-md-6" style="background-color:transparent;">
                                    <div class="form-group">
                                        <span style=" float:left">
                                            @Html.Label("Customer Location", new { @class = "col-md-12 control-label disabled" })
                                        </span>

                                        <div class="col-md-12">
                                            @Html.TextBoxFor(m => m.LocationText, new { @class = " form-control", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </div>
                            </div>*@


                        </div>
                        <div class="form-group" style="background-color:transparent; margin-top:-15px">
                            <div class="row">
                                <div class="col-md-12" style="background-color:transparent;">
                                    <div class="form-group">
                                        <span style=" float:left">
                                            @Html.Label("Description", new { @class = "col-md-12 control-label disabled" })
                                        </span>
                                        <div class="col-md-12">
                                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control ", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
            <div class="row table-responsive" style="padding:0 0 0 20px">
                <table id="clientlist" class="table table-bordered" width="100%">
                    <thead>
                        <tr>
                            <th>No.</th>
                            <th>Product Details</th>
                            @* <th>Color Code</th>*@
                            @* <td>Unit Type</td>*@
                            <th>ServiceType</th>
                            <th>ProductType</th>
                            <th>Customer Type</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int count = 1;
                            foreach (var item in Model.GetDetail)
                            {
                                <tr>
                                    <td>@count</td>
                                   <td>@(item.ProductIdn + " - " + item.Size + " - " + item.Sugar)</td>
                                   @* <td>@item.color_code</td>*@
                                    <td></td>
                                    <td></td>
                                    <td>@item.UNit</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.Price</td>
                                    <td class="totals">@item.Total</td>
                                </tr>
                                count++;

                            }
                        }
                    </tbody>

                    <tfoot>
                        <tr>
                            <th colspan="7" style="text-align:right !important;">Sub Total($): </th>
                            <th colspan="1">
                                @Html.TextBoxFor(m => m.Amount, new { id = "Total", @class = "form-control", @readonly = "readonly" })

                            </th>
                        </tr>
@*
                        <tr>
                            <th colspan="6" style="text-align:right !important;">Owe($): </th>
                            <th colspan="1">
                                @Html.TextBoxFor(m => m.Owe, new { id = "Owe", @class = "form-control", @readonly = "readonly" })

                            </th>
                        </tr>*@



                        <tr>
                            <th colspan="7" style="text-align:right !important;">Discount($):</th>
                            <th colspan="1">
                                @*@Html.TextBoxFor(m => m.Discount, new { id = "Discount", @class = "form-control", @readonly = "readonly" })*@
                                @Html.TextBoxFor(m => m.Discount, new { id = "Discount", @class = "form-control", @type = "number", @min = "0", @step = "0.01", @value = "0" })

                            </th>
                        </tr>


                        <tr>
                            <th colspan="7" style="text-align:right !important;">Old Received From Customer($):</th>
                            <th colspan="1">
                                @Html.TextBoxFor(m => m.RevicedFromCustomer, new { id = "RevicedFromCustomer", @class = "form-control", @readonly = "readonly" })
                            </th>
                        </tr>
                        @if (Convert.ToDecimal(Model.Owe) > 0)
                        {
                            <tr>
                                <th colspan="7" style="text-align:right !important;">New Received From Customer Cash($):</th>
                                <th colspan="1">
                                    @Html.TextBoxFor(m => m.RevicedFromCustomer1, new { id = "RevicedFromCustomer1", @class = "form-control", @autocomplete = "off", @type = "number", @step = "0.01", @value = "0" })
                                </th>
                            </tr>
                            <tr>
                                <th colspan="7" style="text-align:right !important;">New Received From Customer ABA($):</th>
                                <th colspan="1">
                                    @Html.TextBoxFor(m => m.NewReceivedByABA, new { id = "RevicedFromCustomerABA", @class = "form-control", @autocomplete = "off", @type = "number", @step = "0.01", @value = "0" })
                                </th>
                            </tr>
                        }

                    </tfoot>

                </table>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-9">
                    @if (Convert.ToDecimal(Model.Owe) > 0)
                    {
                        <input type="submit" id="save" value="Save" class="btn btn-info" />
                    }

                    @*<input type="reset" value="Edit" id="kosalid" class="btn btn-info" onclick="window.location='/Sale/EditNew/@Html.ValueFor(model => model.Id)';" />*@
                    <input type="reset" value="Delete" id="kosalid" class="btn btn-danger" data-toggle="modal" data-target="#myModal" />
                    <input type="reset" value="Cancel" class="btn btn-secondary" onclick="window.location='/Sale/CustomerHistory';" />

                </div>
            </div>
        </div>
    </div>
    @*<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs4/dt-1.10.20/sc-2.0.1/datatables.min.css" />*@

    @section Scripts {
        @*<script src="~/Scripts/jquery-3.3.1.min.js"></script>
            <script src="~/Scripts/jquery-3.4.1.min.js"></script>
            <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
            <link rel="stylesheet" href="/resources/demos/style.css">
            <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
            <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
            <script type="text/javascript" src="https://cdn.datatables.net/v/bs4/dt-1.10.20/sc-2.0.1/datatables.min.js"></script>*@



<script>
            //$('#Owe').val((parseFloat($('#Total').val()) - parseFloat($('#Discount').val()) - parseFloat($('#RevicedFromCustomer').val())).toFixed(2));

            $('#subTotal').click(function () {

                var subTotal = 0;

                var totals = $('.totals');
                for (var i = 0; i < totals.length; i++) {
                    var total = totals[i].value;
                    subTotal = subTotal + Number(total);

                }

                $('#subTotal').text(subTotal);
            });


    $('#RevicedFromCustomer1').keyup(function () {
        var own = (parseFloat($('#Total').val()) - parseFloat($('#RevicedFromCustomer').val()) - parseFloat($('#Discount').val()));
        //alert(own);
        console.log(own + " " + (txtVal2 + newReceivedABA));
        var txtVal2 = parseFloat(this.value);
        //var newReceivedABA = parseFloat($('#RevicedFromCustomerABA').val());
        var newReceivedABA = $('#RevicedFromCustomerABA').val().length == 0 ? 0 : parseFloat($('#RevicedFromCustomerABA').val());
        console.log(own + " " + (txtVal2 + newReceivedABA));
        if ((txtVal2 + newReceivedABA) > own) {
                    alert("New Recived must less than Owe!");
            $('#RevicedFromCustomer1').val('0');
            $('#RevicedFromCustomerABA').val('0');

                }
    });

    $('#RevicedFromCustomerABA').keyup(function () {
        var own = (parseFloat($('#Total').val()) - parseFloat($('#RevicedFromCustomer').val()) - parseFloat($('#Discount').val()));
        //alert(own);
        var txtVal2 = parseFloat(this.value);
        var newReceivedABA = $('#RevicedFromCustomer1').val().length == 0 ? 0 : parseFloat($('#RevicedFromCustomer1').val());
        console.log(own + " " + (txtVal2 + newReceivedABA));
        if ((txtVal2 + newReceivedABA) > own) {
            alert("New Recived must less than Owe!");
            $('#RevicedFromCustomer1').val('0');
            $('#RevicedFromCustomerABA').val('0');

        }
    });
        qq
            $('#Discount').keyup(function () {
                if ($('#Discount').val() == "") {
                    $('#Discount').val('0');
                }
                if ($('#RevicedFromCustomer1').val() == "") {
                    var own = parseFloat($('#Total').val()) - parseFloat($('#RevicedFromCustomer').val());
                }
                else {
                    var own = parseFloat($('#Total').val()) - parseFloat($('#RevicedFromCustomer').val()) - parseFloat($('#RevicedFromCustomer1').val());
                }
                var txtVal2 = this.value;
                if (txtVal2 > own) {
                    alert("New Received must less than Owe!");
                $('#Discount').val(@Model.Discount);
                    $('#Owe').val(parseFloat($('#Total').val()) - parseFloat($('#Discount').val()) - parseFloat($('#RevicedFromCustomer').val()));

                }
                else {
                    //$('#Owe').val(parseFloat($('#Owe').val()) - parseFloat($('#Discount').val()));
                    $('#Owe').val((parseFloat($('#Total').val()) - parseFloat($('#Discount').val()) - parseFloat($('#RevicedFromCustomer').val())).toFixed(2));

                }
            });
</script>

        @Scripts.Render("~/bundles/jqueryval")
    }
}

