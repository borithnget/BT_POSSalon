@model jotun.Models.SaleViewModels
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Model.RevicedFromCustomer = Convert.ToDecimal(Convert.ToDecimal(Model.RevicedFromCustomer) + Model.ReceivedByABA).ToString("N2");
}

<div style="background-color:#ffffff; padding:15px;">
    <h4>Detail Sale</h4>
    <hr />
    <div class="center-block" style="background-color:transparent">
        @Html.HiddenFor(model => model.Id)
        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static">
            <div class="modal-dialog modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-body">
                        Are you sure you want to delete?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <input type="reset" value="Delete" class="btn btn-danger" onclick="window.location='/Sale/Delete/@Html.ValueFor(model => model.Id)';" />
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group border p-2 shadow-sm rounded">
            <div class="col-md-8">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-floating">
                            <input type="text" class="form-control w-100" readonly value="@Model.CreatedDate" id="date" />
                            <label for="date" class="control-label">Date</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-floating">
                            <input type="text" class="form-control w-100" readonly value="@Model.CustomerName" id="customer" />
                            <label for="customer" class="control-label">Customer</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-floating">
                            <input type="text" class="form-control w-100" readonly value="@Model.OrderType" id="ordertype" />
                            <label for="ordertype" class="control-label">Customer Type</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-floating">
                            <input type="text" class="form-control w-100" readonly value="@Model.InvoiceNo" id="invoice" />
                            <label for="invoice" class="control-label">Invoice No</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-floating">
                            <input type="text" class="form-control w-100" readonly value="@Model.InvoiceStatus" id="invoicestatus" />
                            <label for="invoice" class="control-label">InvoiceStatus</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row table-responsive border p-3 shadow-sm rounded ml-1">
            <table id="clientlist" class="table table-bordered w-100">
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>Product Details</th>
                        <th>ServiceType</th>
                        <th>ProductType</th>
                        <th>Unit</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int count = 1;
                        foreach (var item in Model.GetDetail)
                        {
                            <tr>
                                <td>@count</td>
                                <td>@(item.ProductIdn + " - " + item.Size + " - " + item.Sugar)</td>
                                <td></td>
                                <td></td>
                                <td>@item.UNit</td>
                                <td>@item.Quantity</td>
                                <td>
                                    @{
                                        decimal price = 0;
                                        if (decimal.TryParse(item.Price, out price))
                                        {
                                            @("$" + price.ToString("F2"))
                                        }
                                        else
                                        {
                                            @:0.00
                                        }
                                    }
                                </td>

                                <td>
                                    @{
                                        decimal total = 0;
                                        if (decimal.TryParse(item.Total, out total))
                                        {
                                            @("$" + total.ToString("F2"))
                                        }
                                        else
                                        {
                                            @:0.00
                                        }
                                    }
                                </td>

                            </tr>
                            count++;
                        }
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th colspan="7" style="text-align:right !important;">Discount($):</th>
                        <th colspan="1">
                            <input type="text" class="form-control" readonly value="@(string.Format("${0:F2}", Model.Discount))" />
                        </th>
                    </tr>
                    <tr>
                        <th colspan="7" style="text-align:right !important;">Sub Total($): </th>
                        <th colspan="1">
                            <input type="text" class="form-control" readonly value="@(string.Format("${0:F2}", Model.Amount))" />
                        </th>
                    </tr>
                    <tr>
                        <th colspan="7" style="text-align:right !important;">Payment Type: </th>
                        <th colspan="1">
                            <input type="text" class="form-control" readonly value="@Model.PaymentType" />
                        </th>
                    </tr>
                    <tr>
                        <th colspan="7" style="text-align:right !important;">Old Received From Customer($):</th>
                        <th colspan="1">
                            <input type="text" class="form-control" readonly value="@(string.Format("${0:F2}", Model.RevicedFromCustomer))" />
                        </th>
                    </tr>

                    @if (Convert.ToDecimal(Model.Owe) > 0)
                    {
                        <tr>
                            <th colspan="7" style="text-align:right !important;">New Received From Customer Cash($):</th>
                            <th colspan="1">
                                <input type="text" class="form-control" readonly value="@Model.RevicedFromCustomer1" />
                            </th>
                        </tr>
                        <tr>
                            <th colspan="7" style="text-align:right !important;">New Received From Customer ABA($):</th>
                            <th colspan="1">
                                <input type="text" class="form-control" readonly value="@Model.NewReceivedByABA" />
                            </th>
                        </tr>
                    }
                </tfoot>
            </table>
        </div>
        <div class="form-group mt-2">
            <div class="col-md-offset-2 col-md-9">
                <button class="btn btn-secondary" onclick="window.location='/Sale/CustomerHistory';">
                    <i class="fa fa-arrow-left"></i> Back
                </button>
                <button id="kosalid" class="btn btn-danger" data-toggle="modal" data-target="#myModal">
                    <i class="fa fa-trash"></i> Delete
                </button>
            </div>
        </div>
    </div>
</div>
@section Scripts {

    <link rel="stylesheet" href="~/Content/css/site.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>*

    <script>
            $('#subTotal').click(function () {

                var subTotal = 0;

                var totals = $('.totals');
                for (var i = 0; i < totals.length; i++) {
                    var total = totals[i].value;
                    subTotal = subTotal + Number(total);

                }

                $('#subTotal').text(subTotal);
            });


    $('#RevicedFromCustomer1').keyup(function () {
        var own = (parseFloat($('#Total').val()) - parseFloat($('#RevicedFromCustomer').val()) - parseFloat($('#Discount').val()));
        //alert(own);
        console.log(own + " " + (txtVal2 + newReceivedABA));
        var txtVal2 = parseFloat(this.value);
        //var newReceivedABA = parseFloat($('#RevicedFromCustomerABA').val());
        var newReceivedABA = $('#RevicedFromCustomerABA').val().length == 0 ? 0 : parseFloat($('#RevicedFromCustomerABA').val());
        console.log(own + " " + (txtVal2 + newReceivedABA));
        if ((txtVal2 + newReceivedABA) > own) {
                    alert("New Recived must less than Owe!");
            $('#RevicedFromCustomer1').val('0');
            $('#RevicedFromCustomerABA').val('0');

                }
    });

    $('#RevicedFromCustomerABA').keyup(function () {
        var own = (parseFloat($('#Total').val()) - parseFloat($('#RevicedFromCustomer').val()) - parseFloat($('#Discount').val()));
        //alert(own);
        var txtVal2 = parseFloat(this.value);
        var newReceivedABA = $('#RevicedFromCustomer1').val().length == 0 ? 0 : parseFloat($('#RevicedFromCustomer1').val());
        console.log(own + " " + (txtVal2 + newReceivedABA));
        if ((txtVal2 + newReceivedABA) > own) {
            alert("New Recived must less than Owe!");
            $('#RevicedFromCustomer1').val('0');
            $('#RevicedFromCustomerABA').val('0');

        }
    });
        qq
            $('#Discount').keyup(function () {
                if ($('#Discount').val() == "") {
                    $('#Discount').val('0');
                }
                if ($('#RevicedFromCustomer1').val() == "") {
                    var own = parseFloat($('#Total').val()) - parseFloat($('#RevicedFromCustomer').val());
                }
                else {
                    var own = parseFloat($('#Total').val()) - parseFloat($('#RevicedFromCustomer').val()) - parseFloat($('#RevicedFromCustomer1').val());
                }
                var txtVal2 = this.value;
                if (txtVal2 > own) {
                    alert("New Received must less than Owe!");
                $('#Discount').val(@Model.Discount);
                    $('#Owe').val(parseFloat($('#Total').val()) - parseFloat($('#Discount').val()) - parseFloat($('#RevicedFromCustomer').val()));

                }
                else {
                    //$('#Owe').val(parseFloat($('#Owe').val()) - parseFloat($('#Discount').val()));
                    $('#Owe').val((parseFloat($('#Total').val()) - parseFloat($('#Discount').val()) - parseFloat($('#RevicedFromCustomer').val())).toFixed(2));

                }
            });
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
<style>
    .form-floating {
        position: relative;
        margin-bottom: 1.5rem;
    }

        .form-floating label {
            position: absolute;
            top: 50%;
            left: 10px;
            transform: translateY(-50%);
            pointer-events: none;
            transition: 0.2s ease-in-out;
            padding-top: 5px; /* Adjust this for better spacing */
            border-top: 2px solid transparent; /* Initial top border (transparent) */
        }

        .form-floating input:focus + label,
        .form-floating input:not(:placeholder-shown) + label {
            top: -10px;
            font-size: 0.85rem;
            color: #007bff; /* Change label color on focus */
            border-top: 2px solid #007bff; /* Add border color on focus */
        }

    #clientlist, #clientlist th, #clientlist td {
        border: 1px solid gray !important;
    }
</style>